% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_MTG.R
\name{plotly_mtg}
\alias{plotly_mtg}
\title{Plot an interactive MTG}
\usage{
plotly_mtg(MTG, ..., .scale = NULL, .angle = 45, .phylotaxy = TRUE)
}
\arguments{
\item{MTG}{An MTG, as from \code{\link[=read_mtg]{read_mtg()}}}

\item{...}{Names of the variables to be added to the tooltip (see details and examples).}

\item{.scale}{The scale required for plotting}

\item{.angle}{Insertion angle when branching}

\item{.phylotaxy}{Is phylotaxy required ? Uses 180 degrees if \code{TRUE}.}
}
\value{
A \link{plotly} object of the MTG
}
\description{
Plot an interactive MTG
}
\details{
The name of each argument in \code{...} will be the name of a the variable given in the tooltip,
and the value will be the value of the corresponding variable given as value. The arguments in \code{...} are
automatically quoted and evaluated in the context of the \code{mtg}. They support unquoting and splicing. See
the chapter about \href{https://adv-r.hadley.nz/metaprogramming.html}{metaprogramming} in the book "Advanced R"
from H. Wickham for an introduction to these concepts.
}
\examples{
filepath= system.file("extdata", "simple_plant.mtg", package = "XploRer")
MTG= read_mtg(filepath)
plotly_mtg(MTG)

# We can add more information to the tooltip, e.g. the values of the Length column:
plotly_mtg(MTG, Length)

# We can also use custom names for the variable in the tooltip:
plotly_mtg(MTG, node_width = Width)
# Here the tooltip will show the Width, labeled as "node_width"

}
\seealso{
\code{\link[=mutate_mtg]{mutate_mtg()}} to compute variables and add it to the tooltip with \code{...}.
}

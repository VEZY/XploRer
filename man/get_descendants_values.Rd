% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mtg_helpers.R
\name{get_descendants_values}
\alias{get_descendants_values}
\title{Get descendant values}
\usage{
get_descendants_values(
  attribute,
  node = NULL,
  scale = NULL,
  symbol = NULL,
  link = NULL,
  recursive = TRUE,
  self = FALSE
)
}
\arguments{
\item{attribute}{Any node attribute (as a character)}

\item{node}{The MTG node}

\item{scale}{An integer vector for filtering descendant by their \code{.scale} (i.e. the SCALE
from the MTG classes).}

\item{symbol}{A character vector for filtering the names of the descendant \code{.symbol} (i.e. the SYMBOL
column from the MTG classes).}

\item{link}{A character vector for filtering the \code{.link} with the descendant}

\item{recursive}{Boolean. \code{TRUE}: if a descendant is not of the right \code{scale},\code{symbol}, or \code{link}, continue with its own children
until finding a child that meets the filter conditions. \code{FALSE}: stop the search for a child if it
does not meet the filtering conditions.}

\item{self}{Return the value of the current node (\code{TRUE}), or the ancestors only (\code{FALSE}, the default)}
}
\value{
The attribute values from the descendant(s) of the node
}
\description{
Get attribute values from the descendants (acropetal).
}
\details{
This function is mainly intended to be used with \code{\link[=mutate_mtg]{mutate_mtg()}}. In this case,
the \code{node} argument can be left empty (or you can put \code{node = node} equivalently).
}
\examples{
filepath= system.file("extdata", "tree1h.mtg", package = "XploRer")
MTG = read_mtg(filepath)
node_8 = extract_node(MTG,"node_8")
# getting all descendants of node_8
get_descendants_values(attribute = "length", node = node_8)

# getting all descendants of node_8, but only the nodes with symbol "S":
get_descendants_values(attribute = "length", node = node_8, symbol = "S")

# getting all descendants of node_8, but only the nodes with symbol "S", and not
# recursively, i.e. we stop the search for a child if it is filtered out (we don't
# go to its own children)
get_descendants_values(attribute = "length", node = node_8, symbol = "S",
                       recursive = FALSE)

# To get the descendants of a node but only for the nodes following it, not
# branching (e.g. for an axis):
get_descendants_values(attribute = "length", node = node_8, symbol = "S",
                       link = c("/","<"), recursive = FALSE)

# Length were observed at the "S" scale (S = segment of an axis between two branches),
# but we need the length at the axis scale, to do so:
mutate_mtg(MTG,
           axis_length = sum(get_descendants_values(attribute = "length", symbol = "S",
                                                   link = c("/","<"), recursive = FALSE)),
           .symbol = "A")
}
